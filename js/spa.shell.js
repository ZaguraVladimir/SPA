/*
spa.shell.css
Модуль SHELL для SPA
*/

// Объявляем все переменные, доступные внутри пространства имен, – в данном случае "spa.shell" – в секции «Область видимости модуля». Обсуждение этой и других секций шаблона см. в приложении А.
spa.shell = (function () {
    // -----------------------------НАЧАЛО ПЕРЕМЕННЫХ В ОБЛАСТИ ВИДИМОСТИ МОДУЛЯ-----------------------------
    var
        configMap = {
            mainHTML: String()
            + '<div class="spa-shell-head">'
            + '   <div class="spa-shell-head-logo"></div>'
            + '    <div class="spa-shell-head-acct"></div>'
            + '    <div class="spa-shell-head-search"></div>'
            + '/div>'

            + 'div class="spa-shell-main">'
            + '    <div class="spa-shell-main-nav"></div>'
            + '    <div class="spa-shell-main-content"></div>'
            + '</div>'

            + '<div class="spa-shell-foot"></div>'
            + '<div class="spa-shell-foot-chat"></div>'
            + '<div class="spa-shell-foot-modal"></div>'
        },
        stateMap = { $container: null },// Помещаем динамическую информацию, доступную внутри модуля, в объект stateMap.
        jqueryMap = {},                 // Кэшируем коллекции jQuery в объекте jqueryMap.
        setJqeryMap, initModule;        // В этой секции объявляем все переменные в области видимости модуля. Многим из них значения будут присвоены позже.
    // -----------------------------КОНЕЦ ПЕРЕМЕННЫХ В ОБЛАСТИ ВИДИМОСТИ МОДУЛЯ-----------------------------

    // -----------------------------НАЧАЛО СЛУЖЕБНЫХ МЕТОДОВ-----------------------------
    // В секцию «Служебные методы» помещаются функции, которые не взаимодействуют с элементами страницы.
    // -----------------------------КОНЕЦ СЛУЖЕБНЫХ МЕТОДОВ-----------------------------

    // -----------------------------НАЧАЛО МЕТОДОВ DOM-----------------------------
    // В секцию «Методы DOM» помещаются функции, которые создают элементы на странице и манипулируют ими.

    /*Функция "setJqueryMap" служит для кэширования коллекций jQuery.
    Она должна присутствовать практически во всех написанных нами оболочках и функциональных модулях.
    Кэш jqueryMap позволяет существенно уменьшить количество проходов jQuery по документу и повысить производительность.*/
    setJqeryMap = function () {
        var $container = stateMap.$container;
        jqueryMap = { $container: $container };
    };
    // -----------------------------КОНЕЦ МЕТОДОВ DOM-----------------------------

    // -----------------------------НАЧАЛО ОБРАБОТЧИКОВ СОБЫТИЙ-----------------------------
    // Секция «Обработчики событий» зарезервирована для функций обработки событий.
    // -----------------------------КОНЕЦ ОБРАБОТЧИКОВ СОБЫТИЙ-----------------------------

    // -----------------------------НАЧАЛО ОТКРЫТЫХ МЕТОДОВ-----------------------------

    // Открытый метод initModule используется для инициализации модуля.
    initModule = function ($container) {
        stateMap.$container = $container;
        $container.html = configMap.mainHTML;
        setJqeryMap();
    };

    // Явно экспортируем открытые методы, возвращая их в хэше. В настоящее время есть только один открытый метод – initModule 
    return { initModule: initModule };
    // -----------------------------КОНЕЦ ОТКРЫТЫХ МЕТОДОВ-----------------------------
}());